---
import SvgIcon from './SvgIcon.astro';
---

<script>
	const switchDarkMode = document.getElementById('toggleDarkMode');
	const darkSvg = switchDarkMode?.querySelector('.switch__svg--dark');
	const lightSvg = switchDarkMode?.querySelector('.switch__svg--light');

	let isDark = false;

	switchDarkMode?.addEventListener('click', toggleDarkMode);

	const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
	isDark = darkModeMediaQuery.matches;
	toggleDarkModeClasses();
	darkModeMediaQuery.addEventListener('change', (e: MediaQueryListEvent) => {
		isDark = e.matches;
		toggleDarkModeClasses();
	});

	function toggleDarkMode(_event?: Event): void {
		isDark = !isDark;
		toggleDarkModeClasses();
	}

	function toggleDarkModeClasses() {
		const html = document.querySelector('html');
		if (isDark) {
			switchDarkMode!.ariaChecked = 'true';
			darkSvg?.classList.add('switch__svg--selected');
			lightSvg?.classList.remove('switch__svg--selected');
			html?.classList.add('dark-scheme');
			html?.classList.remove('light-scheme');
		} else {
			switchDarkMode!.ariaChecked = 'false';
			darkSvg?.classList.remove('switch__svg--selected');
			lightSvg?.classList.add('switch__svg--selected');
			html?.classList.add('light-scheme');
			html?.classList.remove('dark-scheme');
		}
	}
</script>

<button
	id="toggleDarkMode"
	class="switch switch--light"
	type="button"
	role="switch"
	aria-checked="false"
	aria-label="Toggle dark mode"
>
	<div class="switch__inner">
		<SvgIcon class="switch__svg switch__svg--selected switch__svg--light" name="sun" size="full" />
		<SvgIcon class="switch__svg switch__svg--dark" name="moon" size="full" />
	</div>
</button>

<style lang="scss" is:global>
	.switch {
		--padding-x: 10px;
		--padding-y: 4px;
		position: relative;
		width: 54px;
		height: 54px * 1.5;
		background-color: var(--tertiary);
		border: var(--border);
		border-radius: var(--border-radius);
		padding: var(--padding-y);

		&:hover {
			cursor: pointer;
		}

		&__inner {
			position: absolute;
			inset: var(--padding-y);
			display: flex;
			flex-direction: column;
			padding: 0;
			border-radius: calc(var(--border-radius) - var(--padding-y));
			// border: var(--border);
			// padding: 4px;
			background-color: var(--stroke);
			color: var(--stroke);
			font-size: 24px;
			text-transform: uppercase;
			appearance: none;
		}

		&__svg {
			padding: 6px;
			border: var(--border);
			z-index: 1;
			transition:
				transform 0.25s cubic-bezier(0.22, 1, 0.36, 1),
				opacity 0.25s cubic-bezier(0.22, 1, 0.36, 1),
				fill 0.25s cubic-bezier(0.22, 1, 0.36, 1);
			&--light {
				background: var(--white-dark);
				border-bottom: none;
				border-top-right-radius: calc(var(--border-radius) - var(--padding-y));
				border-top-left-radius: calc(var(--border-radius) - var(--padding-y));
				transform-origin: center bottom;
				transform: rotateX(25deg);
			}
			&--dark {
				background: linear-gradient(var(--white-dark), var(--white));
				padding: 8px;
				border-bottom: var(--border);
				border-bottom-right-radius: calc(var(--border-radius) - var(--padding-y));
				border-bottom-left-radius: calc(var(--border-radius) - var(--padding-y));
				transform-origin: center top;
				transform: rotateX(25deg);
			}
			&--selected {
				fill: var(--cyan);
				color: var(--secondary);
				&.switch__svg--dark {
					transform: rotateX(0);
				}
				&.switch__svg--light {
					transform: rotateX(0);
				}
			}
		}
	}
</style>
